%{
    #include "syntax.tab.h"
    #include "ASTNode.h"

    #define YY_USER_ACTION \
        yylloc.first_line = yylloc.last_line; \
        yylloc.first_column = yylloc.last_column; \
        for (int i = 0; yytext[i] != '\0'; i++) { \
            if(yytext[i] == '\n') { \
                yylloc.last_line++; \
                yylloc.last_column = 1; \
            } \
            else { \
                yylloc.last_column++; \
            } \
        }

    void comment(YYLTYPE *position);

    int string_level = 0;
    int string(YYSTYPE *value, YYLTYPE *position);
    int close_block(YYSTYPE *value, YYLTYPE *position);

%}

ID_START_0 \xC2\xAA|\xC2\xB5|\xC2\xBA|\xC3[\x80-\x96]|\xC3[\x98-\xB6]|\xC3[\xB8-\xBF]|\xC4[\x80-\xBF]|\xC5[\x80-\xBF]|\xC6[\x80-\xBF]|\xC7[\x80-\xBF]|\xC8[\x80-\xBF]|\xC9[\x80-\x81]|\xC9[\x90-\xBF]|\xCA[\x80-\xBF]|\xCB[\x80-\x81]|\xCB[\x86-\x91]|\xCB[\xA0-\xA4]|\xCB\xAE|\xCD\xBA|\xCE\x86|\xCE[\x88-\x8A]|\xCE\x8C|\xCE[\x8E-\xA1]|\xCE[\xA3-\xBF]|\xCF[\x80-\x8E]|\xCF[\x90-\xB5]|\xCF[\xB7-\xBF]|\xD0[\x80-\xBF]|\xD1[\x80-\xBF]|\xD2[\x80-\x81]|\xD2[\x8A-\xBF]|\xD3[\x80-\x8E]|\xD3[\x90-\xB9]|\xD4[\x80-\x8F]|\xD4[\xB1-\xBF]|\xD5[\x80-\x96]|\xD5\x99|\xD5[\xA1-\xBF]|\xD6[\x80-\x87]|\xD7[\x90-\xAA]|\xD7[\xB0-\xB2]|\xD8[\xA1-\xBA]|\xD9[\x80-\x8A]|\xD9[\xAE-\xAF]|\xD9[\xB1-\xBF]|\xDA[\x80-\xBF]|\xDB[\x80-\x93]|\xDB\x95|\xDB[\xA5-\xA6]|\xDB[\xAE-\xAF]|\xDB[\xBA-\xBC]|\xDB\xBF|\xDC\x90|\xDC[\x92-\xAF]|\xDD[\x8D-\xAD]|\xDE[\x80-\xA5]|\xDE\xB1|\xE0\xA4[\x84-\xB9]|\xE0\xA4\xBD|\xE0\xA5\x90|\xE0\xA5[\x98-\xA1]|\xE0\xA5\xBD|\xE0\xA6[\x85-\x8C]|\xE0\xA6[\x8F-\x90]|\xE0\xA6[\x93-\xA8]

ID_START_1 \xE0\xA6[\xAA-\xB0]|\xE0\xA6\xB2|\xE0\xA6[\xB6-\xB9]|\xE0\xA6\xBD|\xE0\xA7\x8E|\xE0\xA7[\x9C-\x9D]|\xE0\xA7[\x9F-\xA1]|\xE0\xA7[\xB0-\xB1]|\xE0\xA8[\x85-\x8A]|\xE0\xA8[\x8F-\x90]|\xE0\xA8[\x93-\xA8]|\xE0\xA8[\xAA-\xB0]|\xE0\xA8[\xB2-\xB3]|\xE0\xA8[\xB5-\xB6]|\xE0\xA8[\xB8-\xB9]|\xE0\xA9[\x99-\x9C]|\xE0\xA9\x9E|\xE0\xA9[\xB2-\xB4]|\xE0\xAA[\x85-\x8D]|\xE0\xAA[\x8F-\x91]|\xE0\xAA[\x93-\xA8]|\xE0\xAA[\xAA-\xB0]|\xE0\xAA[\xB2-\xB3]|\xE0\xAA[\xB5-\xB9]|\xE0\xAA\xBD|\xE0\xAB\x90|\xE0\xAB[\xA0-\xA1]|\xE0\xAC[\x85-\x8C]|\xE0\xAC[\x8F-\x90]|\xE0\xAC[\x93-\xA8]|\xE0\xAC[\xAA-\xB0]|\xE0\xAC[\xB2-\xB3]|\xE0\xAC[\xB5-\xB9]|\xE0\xAC\xBD|\xE0\xAD[\x9C-\x9D]|\xE0\xAD[\x9F-\xA1]|\xE0\xAD\xB1|\xE0\xAE\x83|\xE0\xAE[\x85-\x8A]|\xE0\xAE[\x8E-\x90]|\xE0\xAE[\x92-\x95]|\xE0\xAE[\x99-\x9A]|\xE0\xAE\x9C|\xE0\xAE[\x9E-\x9F]|\xE0\xAE[\xA3-\xA4]|\xE0\xAE[\xA8-\xAA]|\xE0\xAE[\xAE-\xB9]|\xE0\xB0[\x85-\x8C]|\xE0\xB0[\x8E-\x90]|\xE0\xB0[\x92-\xA8]|\xE0\xB0[\xAA-\xB3]

ID_START_2 \xE0\xB0[\xB5-\xB9]|\xE0\xB1[\xA0-\xA1]|\xE0\xB2[\x85-\x8C]|\xE0\xB2[\x8E-\x90]|\xE0\xB2[\x92-\xA8]|\xE0\xB2[\xAA-\xB3]|\xE0\xB2[\xB5-\xB9]|\xE0\xB2\xBD|\xE0\xB3\x9E|\xE0\xB3[\xA0-\xA1]|\xE0\xB4[\x85-\x8C]|\xE0\xB4[\x8E-\x90]|\xE0\xB4[\x92-\xA8]|\xE0\xB4[\xAA-\xB9]|\xE0\xB5[\xA0-\xA1]|\xE0\xB6[\x85-\x96]|\xE0\xB6[\x9A-\xB1]|\xE0\xB6[\xB3-\xBB]|\xE0\xB6\xBD|\xE0\xB7[\x80-\x86]|\xE0\xB8[\x81-\xB0]|\xE0\xB8[\xB2-\xB3]|\xE0\xB9[\x80-\x86]|\xE0\xBA[\x81-\x82]|\xE0\xBA\x84|\xE0\xBA[\x87-\x88]|\xE0\xBA\x8A|\xE0\xBA\x8D|\xE0\xBA[\x94-\x97]|\xE0\xBA[\x99-\x9F]|\xE0\xBA[\xA1-\xA3]|\xE0\xBA\xA5|\xE0\xBA\xA7|\xE0\xBA[\xAA-\xAB]|\xE0\xBA[\xAD-\xB0]|\xE0\xBA[\xB2-\xB3]|\xE0\xBA\xBD|\xE0\xBB[\x80-\x84]|\xE0\xBB\x86|\xE0\xBB[\x9C-\x9D]|\xE0\xBC\x80|\xE0\xBD[\x80-\x87]|\xE0\xBD[\x89-\xAA]|\xE0\xBE[\x88-\x8B]|\xE1\x80[\x80-\xA1]|\xE1\x80[\xA3-\xA7]|\xE1\x80[\xA9-\xAA]|\xE1\x81[\x90-\x95]|\xE1\x82[\xA0-\xBF]|\xE1\x83[\x80-\x85]|\xE1\x83[\x90-\xBA]|\xE1\x83\xBC

ID_START_3 \xE1\x84[\x80-\xBF]|\xE1\x85[\x80-\x99]|\xE1\x85[\x9F-\xBF]|\xE1\x86[\x80-\xA2]|\xE1\x86[\xA8-\xBF]|\xE1\x87[\x80-\xB9]|\xE1\x88[\x80-\xBF]|\xE1\x89[\x80-\x88]|\xE1\x89[\x8A-\x8D]|\xE1\x89[\x90-\x96]|\xE1\x89\x98|\xE1\x89[\x9A-\x9D]|\xE1\x89[\xA0-\xBF]|\xE1\x8A[\x80-\x88]|\xE1\x8A[\x8A-\x8D]|\xE1\x8A[\x90-\xB0]|\xE1\x8A[\xB2-\xB5]|\xE1\x8A[\xB8-\xBE]|\xE1\x8B\x80|\xE1\x8B[\x82-\x85]|\xE1\x8B[\x88-\x96]|\xE1\x8B[\x98-\xBF]|\xE1\x8C[\x80-\x90]|\xE1\x8C[\x92-\x95]|\xE1\x8C[\x98-\xBF]|\xE1\x8D[\x80-\x9A]|\xE1\x8E[\x80-\x8F]|\xE1\x8E[\xA0-\xBF]|\xE1\x8F[\x80-\xB4]|\xE1\x90[\x81-\xBF]|\xE1\x91[\x80-\xBF]|\xE1\x92[\x80-\xBF]|\xE1\x93[\x80-\xBF]|\xE1\x94[\x80-\xBF]|\xE1\x95[\x80-\xBF]|\xE1\x96[\x80-\xBF]|\xE1\x97[\x80-\xBF]|\xE1\x98[\x80-\xBF]|\xE1\x99[\x80-\xAC]|\xE1\x99[\xAF-\xB6]|\xE1\x9A[\x81-\x9A]|\xE1\x9A[\xA0-\xBF]|\xE1\x9B[\x80-\xAA]|\xE1\x9B[\xAE-\xB0]|\xE1\x9C[\x80-\x8C]|\xE1\x9C[\x8E-\x91]|\xE1\x9C[\xA0-\xB1]|\xE1\x9D[\x80-\x91]|\xE1\x9D[\xA0-\xAC]

ID_START_4 \xE1\x9D[\xAE-\xB0]|\xE1\x9E[\x80-\xB3]|\xE1\x9F\x97|\xE1\x9F\x9C|\xE1\xA0[\xA0-\xBF]|\xE1\xA1[\x80-\xB7]|\xE1\xA2[\x80-\xA8]|\xE1\xA4[\x80-\x9C]|\xE1\xA5[\x90-\xAD]|\xE1\xA5[\xB0-\xB4]|\xE1\xA6[\x80-\xA9]|\xE1\xA7[\x81-\x87]|\xE1\xA8[\x80-\x96]|\xE1\xB4[\x80-\xBF]|\xE1\xB5[\x80-\xBF]|\xE1\xB6[\x80-\xBF]|\xE1\xB8[\x80-\xBF]|\xE1\xB9[\x80-\xBF]|\xE1\xBA[\x80-\x9B]|\xE1\xBA[\xA0-\xBF]|\xE1\xBB[\x80-\xB9]|\xE1\xBC[\x80-\x95]|\xE1\xBC[\x98-\x9D]|\xE1\xBC[\xA0-\xBF]|\xE1\xBD[\x80-\x85]|\xE1\xBD[\x88-\x8D]|\xE1\xBD[\x90-\x97]|\xE1\xBD\x99|\xE1\xBD\x9B|\xE1\xBD\x9D|\xE1\xBD[\x9F-\xBD]|\xE1\xBE[\x80-\xB4]|\xE1\xBE[\xB6-\xBC]|\xE1\xBE\xBE|\xE1\xBF[\x82-\x84]|\xE1\xBF[\x86-\x8C]|\xE1\xBF[\x90-\x93]|\xE1\xBF[\x96-\x9B]|\xE1\xBF[\xA0-\xAC]|\xE1\xBF[\xB2-\xB4]|\xE1\xBF[\xB6-\xBC]|\xE2\x81\xB1|\xE2\x81\xBF|\xE2\x82[\x90-\x94]|\xE2\x84\x82|\xE2\x84\x87|\xE2\x84[\x8A-\x93]|\xE2\x84\x95|\xE2\x84[\x98-\x9D]|\xE2\x84\xA4|\xE2\x84\xA6|\xE2\x84\xA8|\xE2\x84[\xAA-\xB1]

ID_START_5 \xE2\x84[\xB3-\xB9]|\xE2\x84[\xBC-\xBF]|\xE2\x85[\x85-\x89]|\xE2\x85[\xA0-\xBF]|\xE2\x86[\x80-\x83]|\xE2\xB0[\x80-\xAE]|\xE2\xB0[\xB0-\xBF]|\xE2\xB1[\x80-\x9E]|\xE2\xB2[\x80-\xBF]|\xE2\xB3[\x80-\xA4]|\xE2\xB4[\x80-\xA5]|\xE2\xB4[\xB0-\xBF]|\xE2\xB5[\x80-\xA5]|\xE2\xB5\xAF|\xE2\xB6[\x80-\x96]|\xE2\xB6[\xA0-\xA6]|\xE2\xB6[\xA8-\xAE]|\xE2\xB6[\xB0-\xB6]|\xE2\xB6[\xB8-\xBE]|\xE2\xB7[\x80-\x86]|\xE2\xB7[\x88-\x8E]|\xE2\xB7[\x90-\x96]|\xE2\xB7[\x98-\x9E]|\xE3\x80[\x85-\x87]|\xE3\x80[\xA1-\xA9]|\xE3\x80[\xB1-\xB5]|\xE3\x80[\xB8-\xBC]|\xE3\x81[\x81-\xBF]|\xE3\x82[\x80-\x96]|\xE3\x82[\x9B-\x9F]|\xE3\x82[\xA1-\xBF]|\xE3\x83[\x80-\xBA]|\xE3\x83[\xBC-\xBF]|\xE3\x84[\x85-\xAC]|\xE3\x84[\xB1-\xBF]|\xE3\x85[\x80-\xBF]|\xE3\x86[\x80-\x8E]|\xE3\x86[\xA0-\xB7]|\xE3\x87[\xB0-\xBF]|\xE3\x90[\x80-\xBF]|\xE3\x91[\x80-\xBF]|\xE3\x92[\x80-\xBF]|\xE3\x93[\x80-\xBF]|\xE3\x94[\x80-\xBF]|\xE3\x95[\x80-\xBF]|\xE3\x96[\x80-\xBF]|\xE3\x97[\x80-\xBF]|\xE3\x98[\x80-\xBF]

ID_START_6 \xE3\x99[\x80-\xBF]|\xE3\x9A[\x80-\xBF]|\xE3\x9B[\x80-\xBF]|\xE3\x9C[\x80-\xBF]|\xE3\x9D[\x80-\xBF]|\xE3\x9E[\x80-\xBF]|\xE3\x9F[\x80-\xBF]|\xE3\xA0[\x80-\xBF]|\xE3\xA1[\x80-\xBF]|\xE3\xA2[\x80-\xBF]|\xE3\xA3[\x80-\xBF]|\xE3\xA4[\x80-\xBF]|\xE3\xA5[\x80-\xBF]|\xE3\xA6[\x80-\xBF]|\xE3\xA7[\x80-\xBF]|\xE3\xA8[\x80-\xBF]|\xE3\xA9[\x80-\xBF]|\xE3\xAA[\x80-\xBF]|\xE3\xAB[\x80-\xBF]|\xE3\xAC[\x80-\xBF]|\xE3\xAD[\x80-\xBF]|\xE3\xAE[\x80-\xBF]|\xE3\xAF[\x80-\xBF]|\xE3\xB0[\x80-\xBF]|\xE3\xB1[\x80-\xBF]|\xE3\xB2[\x80-\xBF]|\xE3\xB3[\x80-\xBF]|\xE3\xB4[\x80-\xBF]|\xE3\xB5[\x80-\xBF]|\xE3\xB6[\x80-\xBF]|\xE3\xB7[\x80-\xBF]|\xE3\xB8[\x80-\xBF]|\xE3\xB9[\x80-\xBF]|\xE3\xBA[\x80-\xBF]|\xE3\xBB[\x80-\xBF]|\xE3\xBC[\x80-\xBF]|\xE3\xBD[\x80-\xBF]|\xE3\xBE[\x80-\xBF]|\xE3\xBF[\x80-\xBF]|\xE4\x80[\x80-\xBF]|\xE4\x81[\x80-\xBF]|\xE4\x82[\x80-\xBF]|\xE4\x83[\x80-\xBF]|\xE4\x84[\x80-\xBF]|\xE4\x85[\x80-\xBF]|\xE4\x86[\x80-\xBF]|\xE4\x87[\x80-\xBF]|\xE4\x88[\x80-\xBF]

ID_START_7 \xE4\x89[\x80-\xBF]|\xE4\x8A[\x80-\xBF]|\xE4\x8B[\x80-\xBF]|\xE4\x8C[\x80-\xBF]|\xE4\x8D[\x80-\xBF]|\xE4\x8E[\x80-\xBF]|\xE4\x8F[\x80-\xBF]|\xE4\x90[\x80-\xBF]|\xE4\x91[\x80-\xBF]|\xE4\x92[\x80-\xBF]|\xE4\x93[\x80-\xBF]|\xE4\x94[\x80-\xBF]|\xE4\x95[\x80-\xBF]|\xE4\x96[\x80-\xBF]|\xE4\x97[\x80-\xBF]|\xE4\x98[\x80-\xBF]|\xE4\x99[\x80-\xBF]|\xE4\x9A[\x80-\xBF]|\xE4\x9B[\x80-\xBF]|\xE4\x9C[\x80-\xBF]|\xE4\x9D[\x80-\xBF]|\xE4\x9E[\x80-\xBF]|\xE4\x9F[\x80-\xBF]|\xE4\xA0[\x80-\xBF]|\xE4\xA1[\x80-\xBF]|\xE4\xA2[\x80-\xBF]|\xE4\xA3[\x80-\xBF]|\xE4\xA4[\x80-\xBF]|\xE4\xA5[\x80-\xBF]|\xE4\xA6[\x80-\xBF]|\xE4\xA7[\x80-\xBF]|\xE4\xA8[\x80-\xBF]|\xE4\xA9[\x80-\xBF]|\xE4\xAA[\x80-\xBF]|\xE4\xAB[\x80-\xBF]|\xE4\xAC[\x80-\xBF]|\xE4\xAD[\x80-\xBF]|\xE4\xAE[\x80-\xBF]|\xE4\xAF[\x80-\xBF]|\xE4\xB0[\x80-\xBF]|\xE4\xB1[\x80-\xBF]|\xE4\xB2[\x80-\xBF]|\xE4\xB3[\x80-\xBF]|\xE4\xB4[\x80-\xBF]|\xE4\xB5[\x80-\xBF]|\xE4\xB6[\x80-\xB5]|\xE4\xB8[\x80-\xBF]|\xE4\xB9[\x80-\xBF]

ID_START_8 \xE4\xBA[\x80-\xBF]|\xE4\xBB[\x80-\xBF]|\xE4\xBC[\x80-\xBF]|\xE4\xBD[\x80-\xBF]|\xE4\xBE[\x80-\xBF]|\xE4\xBF[\x80-\xBF]|\xE5\x80[\x80-\xBF]|\xE5\x81[\x80-\xBF]|\xE5\x82[\x80-\xBF]|\xE5\x83[\x80-\xBF]|\xE5\x84[\x80-\xBF]|\xE5\x85[\x80-\xBF]|\xE5\x86[\x80-\xBF]|\xE5\x87[\x80-\xBF]|\xE5\x88[\x80-\xBF]|\xE5\x89[\x80-\xBF]|\xE5\x8A[\x80-\xBF]|\xE5\x8B[\x80-\xBF]|\xE5\x8C[\x80-\xBF]|\xE5\x8D[\x80-\xBF]|\xE5\x8E[\x80-\xBF]|\xE5\x8F[\x80-\xBF]|\xE5\x90[\x80-\xBF]|\xE5\x91[\x80-\xBF]|\xE5\x92[\x80-\xBF]|\xE5\x93[\x80-\xBF]|\xE5\x94[\x80-\xBF]|\xE5\x95[\x80-\xBF]|\xE5\x96[\x80-\xBF]|\xE5\x97[\x80-\xBF]|\xE5\x98[\x80-\xBF]|\xE5\x99[\x80-\xBF]|\xE5\x9A[\x80-\xBF]|\xE5\x9B[\x80-\xBF]|\xE5\x9C[\x80-\xBF]|\xE5\x9D[\x80-\xBF]|\xE5\x9E[\x80-\xBF]|\xE5\x9F[\x80-\xBF]|\xE5\xA0[\x80-\xBF]|\xE5\xA1[\x80-\xBF]|\xE5\xA2[\x80-\xBF]|\xE5\xA3[\x80-\xBF]|\xE5\xA4[\x80-\xBF]|\xE5\xA5[\x80-\xBF]|\xE5\xA6[\x80-\xBF]|\xE5\xA7[\x80-\xBF]|\xE5\xA8[\x80-\xBF]|\xE5\xA9[\x80-\xBF]

ID_START_9 \xE5\xAA[\x80-\xBF]|\xE5\xAB[\x80-\xBF]|\xE5\xAC[\x80-\xBF]|\xE5\xAD[\x80-\xBF]|\xE5\xAE[\x80-\xBF]|\xE5\xAF[\x80-\xBF]|\xE5\xB0[\x80-\xBF]|\xE5\xB1[\x80-\xBF]|\xE5\xB2[\x80-\xBF]|\xE5\xB3[\x80-\xBF]|\xE5\xB4[\x80-\xBF]|\xE5\xB5[\x80-\xBF]|\xE5\xB6[\x80-\xBF]|\xE5\xB7[\x80-\xBF]|\xE5\xB8[\x80-\xBF]|\xE5\xB9[\x80-\xBF]|\xE5\xBA[\x80-\xBF]|\xE5\xBB[\x80-\xBF]|\xE5\xBC[\x80-\xBF]|\xE5\xBD[\x80-\xBF]|\xE5\xBE[\x80-\xBF]|\xE5\xBF[\x80-\xBF]|\xE6\x80[\x80-\xBF]|\xE6\x81[\x80-\xBF]|\xE6\x82[\x80-\xBF]|\xE6\x83[\x80-\xBF]|\xE6\x84[\x80-\xBF]|\xE6\x85[\x80-\xBF]|\xE6\x86[\x80-\xBF]|\xE6\x87[\x80-\xBF]|\xE6\x88[\x80-\xBF]|\xE6\x89[\x80-\xBF]|\xE6\x8A[\x80-\xBF]|\xE6\x8B[\x80-\xBF]|\xE6\x8C[\x80-\xBF]|\xE6\x8D[\x80-\xBF]|\xE6\x8E[\x80-\xBF]|\xE6\x8F[\x80-\xBF]|\xE6\x90[\x80-\xBF]|\xE6\x91[\x80-\xBF]|\xE6\x92[\x80-\xBF]|\xE6\x93[\x80-\xBF]|\xE6\x94[\x80-\xBF]|\xE6\x95[\x80-\xBF]|\xE6\x96[\x80-\xBF]|\xE6\x97[\x80-\xBF]|\xE6\x98[\x80-\xBF]|\xE6\x99[\x80-\xBF]

ID_START_10 \xE6\x9A[\x80-\xBF]|\xE6\x9B[\x80-\xBF]|\xE6\x9C[\x80-\xBF]|\xE6\x9D[\x80-\xBF]|\xE6\x9E[\x80-\xBF]|\xE6\x9F[\x80-\xBF]|\xE6\xA0[\x80-\xBF]|\xE6\xA1[\x80-\xBF]|\xE6\xA2[\x80-\xBF]|\xE6\xA3[\x80-\xBF]|\xE6\xA4[\x80-\xBF]|\xE6\xA5[\x80-\xBF]|\xE6\xA6[\x80-\xBF]|\xE6\xA7[\x80-\xBF]|\xE6\xA8[\x80-\xBF]|\xE6\xA9[\x80-\xBF]|\xE6\xAA[\x80-\xBF]|\xE6\xAB[\x80-\xBF]|\xE6\xAC[\x80-\xBF]|\xE6\xAD[\x80-\xBF]|\xE6\xAE[\x80-\xBF]|\xE6\xAF[\x80-\xBF]|\xE6\xB0[\x80-\xBF]|\xE6\xB1[\x80-\xBF]|\xE6\xB2[\x80-\xBF]|\xE6\xB3[\x80-\xBF]|\xE6\xB4[\x80-\xBF]|\xE6\xB5[\x80-\xBF]|\xE6\xB6[\x80-\xBF]|\xE6\xB7[\x80-\xBF]|\xE6\xB8[\x80-\xBF]|\xE6\xB9[\x80-\xBF]|\xE6\xBA[\x80-\xBF]|\xE6\xBB[\x80-\xBF]|\xE6\xBC[\x80-\xBF]|\xE6\xBD[\x80-\xBF]|\xE6\xBE[\x80-\xBF]|\xE6\xBF[\x80-\xBF]|\xE7\x80[\x80-\xBF]|\xE7\x81[\x80-\xBF]|\xE7\x82[\x80-\xBF]|\xE7\x83[\x80-\xBF]|\xE7\x84[\x80-\xBF]|\xE7\x85[\x80-\xBF]|\xE7\x86[\x80-\xBF]|\xE7\x87[\x80-\xBF]|\xE7\x88[\x80-\xBF]|\xE7\x89[\x80-\xBF]

ID_START_11 \xE7\x8A[\x80-\xBF]|\xE7\x8B[\x80-\xBF]|\xE7\x8C[\x80-\xBF]|\xE7\x8D[\x80-\xBF]|\xE7\x8E[\x80-\xBF]|\xE7\x8F[\x80-\xBF]|\xE7\x90[\x80-\xBF]|\xE7\x91[\x80-\xBF]|\xE7\x92[\x80-\xBF]|\xE7\x93[\x80-\xBF]|\xE7\x94[\x80-\xBF]|\xE7\x95[\x80-\xBF]|\xE7\x96[\x80-\xBF]|\xE7\x97[\x80-\xBF]|\xE7\x98[\x80-\xBF]|\xE7\x99[\x80-\xBF]|\xE7\x9A[\x80-\xBF]|\xE7\x9B[\x80-\xBF]|\xE7\x9C[\x80-\xBF]|\xE7\x9D[\x80-\xBF]|\xE7\x9E[\x80-\xBF]|\xE7\x9F[\x80-\xBF]|\xE7\xA0[\x80-\xBF]|\xE7\xA1[\x80-\xBF]|\xE7\xA2[\x80-\xBF]|\xE7\xA3[\x80-\xBF]|\xE7\xA4[\x80-\xBF]|\xE7\xA5[\x80-\xBF]|\xE7\xA6[\x80-\xBF]|\xE7\xA7[\x80-\xBF]|\xE7\xA8[\x80-\xBF]|\xE7\xA9[\x80-\xBF]|\xE7\xAA[\x80-\xBF]|\xE7\xAB[\x80-\xBF]|\xE7\xAC[\x80-\xBF]|\xE7\xAD[\x80-\xBF]|\xE7\xAE[\x80-\xBF]|\xE7\xAF[\x80-\xBF]|\xE7\xB0[\x80-\xBF]|\xE7\xB1[\x80-\xBF]|\xE7\xB2[\x80-\xBF]|\xE7\xB3[\x80-\xBF]|\xE7\xB4[\x80-\xBF]|\xE7\xB5[\x80-\xBF]|\xE7\xB6[\x80-\xBF]|\xE7\xB7[\x80-\xBF]|\xE7\xB8[\x80-\xBF]|\xE7\xB9[\x80-\xBF]

ID_START_12 \xE7\xBA[\x80-\xBF]|\xE7\xBB[\x80-\xBF]|\xE7\xBC[\x80-\xBF]|\xE7\xBD[\x80-\xBF]|\xE7\xBE[\x80-\xBF]|\xE7\xBF[\x80-\xBF]|\xE8\x80[\x80-\xBF]|\xE8\x81[\x80-\xBF]|\xE8\x82[\x80-\xBF]|\xE8\x83[\x80-\xBF]|\xE8\x84[\x80-\xBF]|\xE8\x85[\x80-\xBF]|\xE8\x86[\x80-\xBF]|\xE8\x87[\x80-\xBF]|\xE8\x88[\x80-\xBF]|\xE8\x89[\x80-\xBF]|\xE8\x8A[\x80-\xBF]|\xE8\x8B[\x80-\xBF]|\xE8\x8C[\x80-\xBF]|\xE8\x8D[\x80-\xBF]|\xE8\x8E[\x80-\xBF]|\xE8\x8F[\x80-\xBF]|\xE8\x90[\x80-\xBF]|\xE8\x91[\x80-\xBF]|\xE8\x92[\x80-\xBF]|\xE8\x93[\x80-\xBF]|\xE8\x94[\x80-\xBF]|\xE8\x95[\x80-\xBF]|\xE8\x96[\x80-\xBF]|\xE8\x97[\x80-\xBF]|\xE8\x98[\x80-\xBF]|\xE8\x99[\x80-\xBF]|\xE8\x9A[\x80-\xBF]|\xE8\x9B[\x80-\xBF]|\xE8\x9C[\x80-\xBF]|\xE8\x9D[\x80-\xBF]|\xE8\x9E[\x80-\xBF]|\xE8\x9F[\x80-\xBF]|\xE8\xA0[\x80-\xBF]|\xE8\xA1[\x80-\xBF]|\xE8\xA2[\x80-\xBF]|\xE8\xA3[\x80-\xBF]|\xE8\xA4[\x80-\xBF]|\xE8\xA5[\x80-\xBF]|\xE8\xA6[\x80-\xBF]|\xE8\xA7[\x80-\xBF]|\xE8\xA8[\x80-\xBF]|\xE8\xA9[\x80-\xBF]

ID_START_13 \xE8\xAA[\x80-\xBF]|\xE8\xAB[\x80-\xBF]|\xE8\xAC[\x80-\xBF]|\xE8\xAD[\x80-\xBF]|\xE8\xAE[\x80-\xBF]|\xE8\xAF[\x80-\xBF]|\xE8\xB0[\x80-\xBF]|\xE8\xB1[\x80-\xBF]|\xE8\xB2[\x80-\xBF]|\xE8\xB3[\x80-\xBF]|\xE8\xB4[\x80-\xBF]|\xE8\xB5[\x80-\xBF]|\xE8\xB6[\x80-\xBF]|\xE8\xB7[\x80-\xBF]|\xE8\xB8[\x80-\xBF]|\xE8\xB9[\x80-\xBF]|\xE8\xBA[\x80-\xBF]|\xE8\xBB[\x80-\xBF]|\xE8\xBC[\x80-\xBF]|\xE8\xBD[\x80-\xBF]|\xE8\xBE[\x80-\xBF]|\xE8\xBF[\x80-\xBF]|\xE9\x80[\x80-\xBF]|\xE9\x81[\x80-\xBF]|\xE9\x82[\x80-\xBF]|\xE9\x83[\x80-\xBF]|\xE9\x84[\x80-\xBF]|\xE9\x85[\x80-\xBF]|\xE9\x86[\x80-\xBF]|\xE9\x87[\x80-\xBF]|\xE9\x88[\x80-\xBF]|\xE9\x89[\x80-\xBF]|\xE9\x8A[\x80-\xBF]|\xE9\x8B[\x80-\xBF]|\xE9\x8C[\x80-\xBF]|\xE9\x8D[\x80-\xBF]|\xE9\x8E[\x80-\xBF]|\xE9\x8F[\x80-\xBF]|\xE9\x90[\x80-\xBF]|\xE9\x91[\x80-\xBF]|\xE9\x92[\x80-\xBF]|\xE9\x93[\x80-\xBF]|\xE9\x94[\x80-\xBF]|\xE9\x95[\x80-\xBF]|\xE9\x96[\x80-\xBF]|\xE9\x97[\x80-\xBF]|\xE9\x98[\x80-\xBF]|\xE9\x99[\x80-\xBF]

ID_START_14 \xE9\x9A[\x80-\xBF]|\xE9\x9B[\x80-\xBF]|\xE9\x9C[\x80-\xBF]|\xE9\x9D[\x80-\xBF]|\xE9\x9E[\x80-\xBF]|\xE9\x9F[\x80-\xBF]|\xE9\xA0[\x80-\xBF]|\xE9\xA1[\x80-\xBF]|\xE9\xA2[\x80-\xBF]|\xE9\xA3[\x80-\xBF]|\xE9\xA4[\x80-\xBF]|\xE9\xA5[\x80-\xBF]|\xE9\xA6[\x80-\xBF]|\xE9\xA7[\x80-\xBF]|\xE9\xA8[\x80-\xBF]|\xE9\xA9[\x80-\xBF]|\xE9\xAA[\x80-\xBF]|\xE9\xAB[\x80-\xBF]|\xE9\xAC[\x80-\xBF]|\xE9\xAD[\x80-\xBF]|\xE9\xAE[\x80-\xBF]|\xE9\xAF[\x80-\xBF]|\xE9\xB0[\x80-\xBF]|\xE9\xB1[\x80-\xBF]|\xE9\xB2[\x80-\xBF]|\xE9\xB3[\x80-\xBF]|\xE9\xB4[\x80-\xBF]|\xE9\xB5[\x80-\xBF]|\xE9\xB6[\x80-\xBF]|\xE9\xB7[\x80-\xBF]|\xE9\xB8[\x80-\xBF]|\xE9\xB9[\x80-\xBF]|\xE9\xBA[\x80-\xBF]|\xE9\xBB[\x80-\xBF]|\xE9\xBC[\x80-\xBF]|\xE9\xBD[\x80-\xBF]|\xE9\xBE[\x80-\xBB]|\xEA\x80[\x80-\xBF]|\xEA\x81[\x80-\xBF]|\xEA\x82[\x80-\xBF]|\xEA\x83[\x80-\xBF]|\xEA\x84[\x80-\xBF]|\xEA\x85[\x80-\xBF]|\xEA\x86[\x80-\xBF]|\xEA\x87[\x80-\xBF]|\xEA\x88[\x80-\xBF]|\xEA\x89[\x80-\xBF]|\xEA\x8A[\x80-\xBF]

ID_START_15 \xEA\x8B[\x80-\xBF]|\xEA\x8C[\x80-\xBF]|\xEA\x8D[\x80-\xBF]|\xEA\x8E[\x80-\xBF]|\xEA\x8F[\x80-\xBF]|\xEA\x90[\x80-\xBF]|\xEA\x91[\x80-\xBF]|\xEA\x92[\x80-\x8C]|\xEA\xA0[\x80-\x81]|\xEA\xA0[\x83-\x85]|\xEA\xA0[\x87-\x8A]|\xEA\xA0[\x8C-\xA2]|\xEA\xB0[\x80-\xBF]|\xEA\xB1[\x80-\xBF]|\xEA\xB2[\x80-\xBF]|\xEA\xB3[\x80-\xBF]|\xEA\xB4[\x80-\xBF]|\xEA\xB5[\x80-\xBF]|\xEA\xB6[\x80-\xBF]|\xEA\xB7[\x80-\xBF]|\xEA\xB8[\x80-\xBF]|\xEA\xB9[\x80-\xBF]|\xEA\xBA[\x80-\xBF]|\xEA\xBB[\x80-\xBF]|\xEA\xBC[\x80-\xBF]|\xEA\xBD[\x80-\xBF]|\xEA\xBE[\x80-\xBF]|\xEA\xBF[\x80-\xBF]|\xEB\x80[\x80-\xBF]|\xEB\x81[\x80-\xBF]|\xEB\x82[\x80-\xBF]|\xEB\x83[\x80-\xBF]|\xEB\x84[\x80-\xBF]|\xEB\x85[\x80-\xBF]|\xEB\x86[\x80-\xBF]|\xEB\x87[\x80-\xBF]|\xEB\x88[\x80-\xBF]|\xEB\x89[\x80-\xBF]|\xEB\x8A[\x80-\xBF]|\xEB\x8B[\x80-\xBF]|\xEB\x8C[\x80-\xBF]|\xEB\x8D[\x80-\xBF]|\xEB\x8E[\x80-\xBF]|\xEB\x8F[\x80-\xBF]|\xEB\x90[\x80-\xBF]|\xEB\x91[\x80-\xBF]|\xEB\x92[\x80-\xBF]|\xEB\x93[\x80-\xBF]

ID_START_16 \xEB\x94[\x80-\xBF]|\xEB\x95[\x80-\xBF]|\xEB\x96[\x80-\xBF]|\xEB\x97[\x80-\xBF]|\xEB\x98[\x80-\xBF]|\xEB\x99[\x80-\xBF]|\xEB\x9A[\x80-\xBF]|\xEB\x9B[\x80-\xBF]|\xEB\x9C[\x80-\xBF]|\xEB\x9D[\x80-\xBF]|\xEB\x9E[\x80-\xBF]|\xEB\x9F[\x80-\xBF]|\xEB\xA0[\x80-\xBF]|\xEB\xA1[\x80-\xBF]|\xEB\xA2[\x80-\xBF]|\xEB\xA3[\x80-\xBF]|\xEB\xA4[\x80-\xBF]|\xEB\xA5[\x80-\xBF]|\xEB\xA6[\x80-\xBF]|\xEB\xA7[\x80-\xBF]|\xEB\xA8[\x80-\xBF]|\xEB\xA9[\x80-\xBF]|\xEB\xAA[\x80-\xBF]|\xEB\xAB[\x80-\xBF]|\xEB\xAC[\x80-\xBF]|\xEB\xAD[\x80-\xBF]|\xEB\xAE[\x80-\xBF]|\xEB\xAF[\x80-\xBF]|\xEB\xB0[\x80-\xBF]|\xEB\xB1[\x80-\xBF]|\xEB\xB2[\x80-\xBF]|\xEB\xB3[\x80-\xBF]|\xEB\xB4[\x80-\xBF]|\xEB\xB5[\x80-\xBF]|\xEB\xB6[\x80-\xBF]|\xEB\xB7[\x80-\xBF]|\xEB\xB8[\x80-\xBF]|\xEB\xB9[\x80-\xBF]|\xEB\xBA[\x80-\xBF]|\xEB\xBB[\x80-\xBF]|\xEB\xBC[\x80-\xBF]|\xEB\xBD[\x80-\xBF]|\xEB\xBE[\x80-\xBF]|\xEB\xBF[\x80-\xBF]|\xEC\x80[\x80-\xBF]|\xEC\x81[\x80-\xBF]|\xEC\x82[\x80-\xBF]|\xEC\x83[\x80-\xBF]

ID_START_17 \xEC\x84[\x80-\xBF]|\xEC\x85[\x80-\xBF]|\xEC\x86[\x80-\xBF]|\xEC\x87[\x80-\xBF]|\xEC\x88[\x80-\xBF]|\xEC\x89[\x80-\xBF]|\xEC\x8A[\x80-\xBF]|\xEC\x8B[\x80-\xBF]|\xEC\x8C[\x80-\xBF]|\xEC\x8D[\x80-\xBF]|\xEC\x8E[\x80-\xBF]|\xEC\x8F[\x80-\xBF]|\xEC\x90[\x80-\xBF]|\xEC\x91[\x80-\xBF]|\xEC\x92[\x80-\xBF]|\xEC\x93[\x80-\xBF]|\xEC\x94[\x80-\xBF]|\xEC\x95[\x80-\xBF]|\xEC\x96[\x80-\xBF]|\xEC\x97[\x80-\xBF]|\xEC\x98[\x80-\xBF]|\xEC\x99[\x80-\xBF]|\xEC\x9A[\x80-\xBF]|\xEC\x9B[\x80-\xBF]|\xEC\x9C[\x80-\xBF]|\xEC\x9D[\x80-\xBF]|\xEC\x9E[\x80-\xBF]|\xEC\x9F[\x80-\xBF]|\xEC\xA0[\x80-\xBF]|\xEC\xA1[\x80-\xBF]|\xEC\xA2[\x80-\xBF]|\xEC\xA3[\x80-\xBF]|\xEC\xA4[\x80-\xBF]|\xEC\xA5[\x80-\xBF]|\xEC\xA6[\x80-\xBF]|\xEC\xA7[\x80-\xBF]|\xEC\xA8[\x80-\xBF]|\xEC\xA9[\x80-\xBF]|\xEC\xAA[\x80-\xBF]|\xEC\xAB[\x80-\xBF]|\xEC\xAC[\x80-\xBF]|\xEC\xAD[\x80-\xBF]|\xEC\xAE[\x80-\xBF]|\xEC\xAF[\x80-\xBF]|\xEC\xB0[\x80-\xBF]|\xEC\xB1[\x80-\xBF]|\xEC\xB2[\x80-\xBF]|\xEC\xB3[\x80-\xBF]

ID_START_18 \xEC\xB4[\x80-\xBF]|\xEC\xB5[\x80-\xBF]|\xEC\xB6[\x80-\xBF]|\xEC\xB7[\x80-\xBF]|\xEC\xB8[\x80-\xBF]|\xEC\xB9[\x80-\xBF]|\xEC\xBA[\x80-\xBF]|\xEC\xBB[\x80-\xBF]|\xEC\xBC[\x80-\xBF]|\xEC\xBD[\x80-\xBF]|\xEC\xBE[\x80-\xBF]|\xEC\xBF[\x80-\xBF]|\xED\x80[\x80-\xBF]|\xED\x81[\x80-\xBF]|\xED\x82[\x80-\xBF]|\xED\x83[\x80-\xBF]|\xED\x84[\x80-\xBF]|\xED\x85[\x80-\xBF]|\xED\x86[\x80-\xBF]|\xED\x87[\x80-\xBF]|\xED\x88[\x80-\xBF]|\xED\x89[\x80-\xBF]|\xED\x8A[\x80-\xBF]|\xED\x8B[\x80-\xBF]|\xED\x8C[\x80-\xBF]|\xED\x8D[\x80-\xBF]|\xED\x8E[\x80-\xBF]|\xED\x8F[\x80-\xBF]|\xED\x90[\x80-\xBF]|\xED\x91[\x80-\xBF]|\xED\x92[\x80-\xBF]|\xED\x93[\x80-\xBF]|\xED\x94[\x80-\xBF]|\xED\x95[\x80-\xBF]|\xED\x96[\x80-\xBF]|\xED\x97[\x80-\xBF]|\xED\x98[\x80-\xBF]|\xED\x99[\x80-\xBF]|\xED\x9A[\x80-\xBF]|\xED\x9B[\x80-\xBF]|\xED\x9C[\x80-\xBF]|\xED\x9D[\x80-\xBF]|\xED\x9E[\x80-\xA3]|\xEF\xA4[\x80-\xBF]|\xEF\xA5[\x80-\xBF]|\xEF\xA6[\x80-\xBF]|\xEF\xA7[\x80-\xBF]|\xEF\xA8[\x80-\xAD]

ID_START_19 \xEF\xA8[\xB0-\xBF]|\xEF\xA9[\x80-\xAA]|\xEF\xA9[\xB0-\xBF]|\xEF\xAA[\x80-\xBF]|\xEF\xAB[\x80-\x99]|\xEF\xAC[\x80-\x86]|\xEF\xAC[\x93-\x97]|\xEF\xAC\x9D|\xEF\xAC[\x9F-\xA8]|\xEF\xAC[\xAA-\xB6]|\xEF\xAC[\xB8-\xBC]|\xEF\xAC\xBE|\xEF\xAD[\x80-\x81]|\xEF\xAD[\x83-\x84]|\xEF\xAD[\x86-\xBF]|\xEF\xAE[\x80-\xB1]|\xEF\xAF[\x93-\xBF]|\xEF\xB0[\x80-\xBF]|\xEF\xB1[\x80-\xBF]|\xEF\xB2[\x80-\xBF]|\xEF\xB3[\x80-\xBF]|\xEF\xB4[\x80-\xBD]|\xEF\xB5[\x90-\xBF]|\xEF\xB6[\x80-\x8F]|\xEF\xB6[\x92-\xBF]|\xEF\xB7[\x80-\x87]|\xEF\xB7[\xB0-\xBB]|\xEF\xB9[\xB0-\xB4]|\xEF\xB9[\xB6-\xBF]|\xEF\xBA[\x80-\xBF]|\xEF\xBB[\x80-\xBC]|\xEF\xBC[\xA1-\xBA]|\xEF\xBD[\x81-\x9A]|\xEF\xBD[\xA6-\xBF]|\xEF\xBE[\x80-\xBE]|\xEF\xBF[\x82-\x87]|\xEF\xBF[\x8A-\x8F]|\xEF\xBF[\x92-\x97]|\xEF\xBF[\x9A-\x9C]

ID_CONTINUE_0 \xCC[\x80-\xBF]|\xCD[\x80-\xAF]|\xD2[\x83-\x86]|\xD6[\x91-\xB9]|\xD6[\xBB-\xBD]|\xD6\xBF|\xD7[\x81-\x82]|\xD7[\x84-\x85]|\xD7\x87|\xD8[\x90-\x95]|\xD9[\x8B-\x9E]|\xD9[\xA0-\xA9]|\xD9\xB0|\xDB[\x96-\x9C]|\xDB[\x9F-\xA4]|\xDB[\xA7-\xA8]|\xDB[\xAA-\xAD]|\xDB[\xB0-\xB9]|\xDC\x91|\xDC[\xB0-\xBF]|\xDD[\x80-\x8A]|\xDE[\xA6-\xB0]|\xE0\xA4[\x81-\x83]|\xE0\xA4\xBC|\xE0\xA4[\xBE-\xBF]|\xE0\xA5[\x80-\x8D]|\xE0\xA5[\x91-\x94]|\xE0\xA5[\xA2-\xA3]|\xE0\xA5[\xA6-\xAF]|\xE0\xA6[\x81-\x83]|\xE0\xA6\xBC|\xE0\xA6[\xBE-\xBF]|\xE0\xA7[\x80-\x84]|\xE0\xA7[\x87-\x88]|\xE0\xA7[\x8B-\x8D]|\xE0\xA7\x97|\xE0\xA7[\xA2-\xA3]|\xE0\xA7[\xA6-\xAF]|\xE0\xA8[\x81-\x83]|\xE0\xA8\xBC|\xE0\xA8[\xBE-\xBF]|\xE0\xA9[\x80-\x82]|\xE0\xA9[\x87-\x88]|\xE0\xA9[\x8B-\x8D]|\xE0\xA9[\xA6-\xB1]|\xE0\xAA[\x81-\x83]|\xE0\xAA\xBC|\xE0\xAA[\xBE-\xBF]|\xE0\xAB[\x80-\x85]|\xE0\xAB[\x87-\x89]|\xE0\xAB[\x8B-\x8D]|\xE0\xAB[\xA2-\xA3]|\xE0\xAB[\xA6-\xAF]|\xE0\xAC[\x81-\x83]|\xE0\xAC\xBC|\xE0\xAC[\xBE-\xBF]

ID_CONTINUE_1 \xE0\xAD[\x80-\x83]|\xE0\xAD[\x87-\x88]|\xE0\xAD[\x8B-\x8D]|\xE0\xAD[\x96-\x97]|\xE0\xAD[\xA6-\xAF]|\xE0\xAE\x82|\xE0\xAE[\xBE-\xBF]|\xE0\xAF[\x80-\x82]|\xE0\xAF[\x86-\x88]|\xE0\xAF[\x8A-\x8D]|\xE0\xAF\x97|\xE0\xAF[\xA6-\xAF]|\xE0\xB0[\x81-\x83]|\xE0\xB0[\xBE-\xBF]|\xE0\xB1[\x80-\x84]|\xE0\xB1[\x86-\x88]|\xE0\xB1[\x8A-\x8D]|\xE0\xB1[\x95-\x96]|\xE0\xB1[\xA6-\xAF]|\xE0\xB2[\x82-\x83]|\xE0\xB2\xBC|\xE0\xB2[\xBE-\xBF]|\xE0\xB3[\x80-\x84]|\xE0\xB3[\x86-\x88]|\xE0\xB3[\x8A-\x8D]|\xE0\xB3[\x95-\x96]|\xE0\xB3[\xA6-\xAF]|\xE0\xB4[\x82-\x83]|\xE0\xB4[\xBE-\xBF]|\xE0\xB5[\x80-\x83]|\xE0\xB5[\x86-\x88]|\xE0\xB5[\x8A-\x8D]|\xE0\xB5\x97|\xE0\xB5[\xA6-\xAF]|\xE0\xB6[\x82-\x83]|\xE0\xB7\x8A|\xE0\xB7[\x8F-\x94]|\xE0\xB7\x96|\xE0\xB7[\x98-\x9F]|\xE0\xB7[\xB2-\xB3]|\xE0\xB8\xB1|\xE0\xB8[\xB4-\xBA]|\xE0\xB9[\x87-\x8E]|\xE0\xB9[\x90-\x99]|\xE0\xBA\xB1|\xE0\xBA[\xB4-\xB9]|\xE0\xBA[\xBB-\xBC]|\xE0\xBB[\x88-\x8D]|\xE0\xBB[\x90-\x99]|\xE0\xBC[\x98-\x99]|\xE0\xBC[\xA0-\xA9]

ID_CONTINUE_2 \xE0\xBC\xB5|\xE0\xBC\xB7|\xE0\xBC\xB9|\xE0\xBC[\xBE-\xBF]|\xE0\xBD[\xB1-\xBF]|\xE0\xBE[\x80-\x84]|\xE0\xBE[\x86-\x87]|\xE0\xBE[\x90-\x97]|\xE0\xBE[\x99-\xBC]|\xE0\xBF\x86|\xE1\x80[\xAC-\xB2]|\xE1\x80[\xB6-\xB9]|\xE1\x81[\x80-\x89]|\xE1\x81[\x96-\x99]|\xE1\x8D\x9F|\xE1\x8D[\xA9-\xB1]|\xE1\x9C[\x92-\x94]|\xE1\x9C[\xB2-\xB4]|\xE1\x9D[\x92-\x93]|\xE1\x9D[\xB2-\xB3]|\xE1\x9E[\xB6-\xBF]|\xE1\x9F[\x80-\x93]|\xE1\x9F\x9D|\xE1\x9F[\xA0-\xA9]|\xE1\xA0[\x8B-\x8D]|\xE1\xA0[\x90-\x99]|\xE1\xA2\xA9|\xE1\xA4[\xA0-\xAB]|\xE1\xA4[\xB0-\xBB]|\xE1\xA5[\x86-\x8F]|\xE1\xA6[\xB0-\xBF]|\xE1\xA7\x80|\xE1\xA7[\x88-\x89]|\xE1\xA7[\x90-\x99]|\xE1\xA8[\x97-\x9B]|\xE1\xB7[\x80-\x83]|\xE2\x80\xBF|\xE2\x81\x80|\xE2\x81\x94|\xE2\x83[\x90-\x9C]|\xE2\x83\xA1|\xE2\x83[\xA5-\xAB]|\xE3\x80[\xAA-\xAF]|\xE3\x82[\x99-\x9A]|\xEA\xA0\x82|\xEA\xA0\x86|\xEA\xA0\x8B|\xEA\xA0[\xA3-\xA7]|\xEF\xAC\x9E|\xEF\xB8[\x80-\x8F]|\xEF\xB8[\xA0-\xA3]|\xEF\xB8[\xB3-\xB4]|\xEF\xB9[\x8D-\x8F]|\xEF\xBC[\x90-\x99]

ID_CONTINUE_3 \xEF\xBC\xBF

ID_START _|[A-Z]|[a-z]|{ID_START_0}|{ID_START_1}|{ID_START_2}|{ID_START_3}|{ID_START_4}|{ID_START_5}|{ID_START_6}|{ID_START_7}|{ID_START_8}|{ID_START_9}|{ID_START_10}|{ID_START_11}|{ID_START_12}|{ID_START_13}|{ID_START_14}|{ID_START_15}|{ID_START_16}|{ID_START_17}|{ID_START_18}|{ID_START_19}

ID_CONTINUE {ID_START}|[0-9]|{ID_CONTINUE_0}|{ID_CONTINUE_1}|{ID_CONTINUE_2}|{ID_CONTINUE_3}
 
%%
[0-9]|[1-9][0-9]+ { 
    yylval = make_int_node("INT", yylloc, (int)strtol(yytext, NULL, 10));
    return INT;
}
0[xX]([0-9A-Fa-f]|[1-9A-Fa-f][0-9A-Fa-f]+) {
    yylval = make_int_node("INT", yylloc, (int)strtol(yytext, NULL, 0));
    return INT;
}

[-]?[0-9]+\.[0-9]+ { 
    yylval = make_float_node("FLOAT", yylloc, strtof(yytext, NULL));
    yylval->display_value = strdup(yytext);
    return FLOAT; 
}

\'[\x20-\x7E]\' { 
    char str[2];
    str[0] = yytext[1];
    str[1] = '\0';
    yylval = make_string_node("CHAR", yylloc, str);
    return CHAR;
}

\'\\x[0-9A-Fa-f]{1,2}\' {
    char str[5] = "\\x";
    str[2] = yytext[3];
    if (yytext[4] != '\'') str[3] = yytext[4];

    char* display_value = strdup(str);
    str[0] = '0';

    char c = (char)strtol(str, NULL, 0);
    str[0] = c;
    str[1] = '\0';
    yylval = make_string_node("CHAR", yylloc, str);

    yylval->display_value = display_value;
    return CHAR;
}

int|float|char|string { 
    yylval = make_string_node("TYPE", yylloc, yytext);
    return TYPE;
}

struct  { yylval = make_empty_node("STRUCT", yylloc); return STRUCT; }
if      { yylval = make_empty_node("IF", yylloc); return IF; }
else    { yylval = make_empty_node("ELSE", yylloc); return ELSE; }
while   { yylval = make_empty_node("WHILE", yylloc); return WHILE; }
return  { yylval = make_empty_node("RETURN", yylloc); return RETURN; }

for  { yylval = make_empty_node("FOR", yylloc); return FOR; }
in  { yylval = make_empty_node("IN", yylloc); return IN; }
break  { yylval = make_empty_node("BREAK", yylloc); return BREAK; }
continue  { yylval = make_empty_node("CONTINUE", yylloc); return CONTINUE; }

import  { yylval = make_empty_node("IMPORT", yylloc); return IMPORT; }
as  { yylval = make_empty_node("AS", yylloc); return AS; }

{ID_START}{ID_CONTINUE}* { 
    yylval = make_string_node("ID", yylloc, yytext);
    return ID;
}

"." { yylval = make_empty_node("DOT", yylloc); return DOT; }
";" { yylval = make_empty_node("SEMI", yylloc); return SEMI; }
"," { yylval = make_empty_node("COMMA", yylloc); return COMMA; }

"==" { yylval = make_empty_node("EQ", yylloc); return EQ; }
"!=" { yylval = make_empty_node("NE", yylloc); return NE; }
"=" { yylval = make_empty_node("ASSIGN", yylloc); return ASSIGN; }

"<=" { yylval = make_empty_node("LE", yylloc); return LE; }
"<" { yylval = make_empty_node("LT", yylloc); return LT; }
">=" { yylval = make_empty_node("GE", yylloc); return GE; }
">" { yylval = make_empty_node("GT", yylloc); return GT; }

"+" { yylval = make_empty_node("PLUS", yylloc); return PLUS; }
"-" { yylval = make_empty_node("MINUS", yylloc); return MINUS; }
"*" { yylval = make_empty_node("MUL", yylloc); return MUL; }
"/" { yylval = make_empty_node("DIV", yylloc); return DIV; }
"&&" { yylval = make_empty_node("AND", yylloc); return AND; }
"||" { yylval = make_empty_node("OR", yylloc); return OR; }
"!" { yylval = make_empty_node("NOT", yylloc); return NOT; }

"(" { yylval = make_empty_node("LP", yylloc); return LP; }
")" { yylval = make_empty_node("RP", yylloc); return RP; }
"[" { yylval = make_empty_node("LB", yylloc); return LB; }
"]" { yylval = make_empty_node("RB", yylloc); return RB; }
"{" { yylval = make_empty_node("LC", yylloc); return LC; }

"}" { return close_block(&yylval, &yylloc); }

":" { yylval = make_empty_node("COLON", yylloc); return COLON; }
".." { yylval = make_empty_node("DOUBLE_DOT", yylloc); return DOUBLE_DOT; }

[ \t]+ {}
"\r"|"\r\n"|"\n" {}

"|" { printf("Error type A at Line %d: unknown lexeme %s\n", yylloc.first_line, yytext); error_happen = 1; yylval = make_empty_node("OR", yylloc); return OR; }
"&" { printf("Error type A at Line %d: unknown lexeme %s\n", yylloc.first_line, yytext); error_happen = 1; yylval = make_empty_node("AND", yylloc); return AND; }

"//".* {}

"/*" { comment(&yylloc); }

"\"" { return string(&yylval, &yylloc); }

[^ \t\r\n\.:;,=<>+\-*/\(\)\[\]\{\}\"]+ {
    printf("Error type A at Line %d: unknown lexeme %s\n", yylloc.first_line, yytext);
    error_happen = 1;
    yylval = make_string_node("ID", yylloc, yytext);
    return ID;
}

%%

void comment(YYLTYPE *position) {
	char c1, c2;

    c1 = input();
    while (1) {
        if (c1 != 0) {
            c2 = input();
        } else {
            printf("Error type A at Line %d: Missing closing comment '*/'\n", position->last_line);
            error_happen = 1;
            return;
        }
        if (c1 == '*' && c2 == '/') {
            position->last_column += 2;
            return;
        }
        if (c1 == '\n') {
            position->last_line++;
            position->last_column = 1;
        } else {
            position->last_column++;
        }
        c1 = c2;
    }

}

int string(YYSTYPE *value, YYLTYPE *position) {
	char c1, c2;
    int escape = 0;

    char buff[1000] = "\"";
    int buff_index = 1;

    c1 = input();
    while (1) {
        if (c1 == 0) {
            printf("Error type A at Line %d: Missing closing string '\"'\n", position->last_line);
            error_happen = 1;
            *value = make_string_node("STRING", *position, buff);
            return STRING;
        }

        if (c1 == '\n') {
            unput(c1);
            printf("Error type A at Line %d: Missing closing string '\"'\n", position->last_line);
            error_happen = 1;
            *value = make_string_node("STRING", *position, buff);
            return STRING;
        }

        if (c1 == '"' && escape % 2 != 1) {
            position->last_column++;
            buff[buff_index++] = c1;
            *value = make_string_node("STRING", *position, buff);
            return STRING;
        }

        c2 = input();

        if (c1 == '$' && c2 == '{' && escape % 2 != 1) {
            position->last_column += 2;
            buff[buff_index++] = c1;
            buff[buff_index++] = c2;
            string_level++;
            *value = make_string_node("STRING_BEGIN", *position, buff);
            return STRING_BEGIN;
        }
        
        if (c1 == '\\') {
            escape++;
        } else {
            escape = 0;
        }

        buff[buff_index++] = c1;
        c1 = c2;
    }

}

int close_block(YYSTYPE *value, YYLTYPE *position) {
    if (string_level == 0) {
        *value = make_empty_node("RC", *position);
        return RC;
    }

	char c1, c2;
    int escape = 0;

    char buff[1000] = "}";
    int buff_index = 1;

    c1 = input();
    while (1) {
        if (c1 == 0) {
            printf("Error type A at Line %d: Missing closing string '\"'\n", position->last_line);
            error_happen = 1;
            string_level--;
            *value = make_string_node("STRING_END", *position, buff);
            return STRING_END;
        }

        if (c1 == '\n') {
            unput(c1);
            printf("Error type A at Line %d: Missing closing string '\"'\n", position->last_line);
            error_happen = 1;
            string_level--;
            *value = make_string_node("STRING_END", *position, buff);
            return STRING_END;
        }

        if (c1 == '"' && escape % 2 != 1) {
            position->last_column++;
            buff[buff_index++] = c1;
            string_level--;
            *value = make_string_node("STRING_END", *position, buff);
            return STRING_END;
        }

        c2 = input();

        if (c1 == '$' && c2 == '{' && escape % 2 != 1) {
            position->last_column += 2;
            buff[buff_index++] = c1;
            buff[buff_index++] = c2;
            *value = make_string_node("STRING_INTERNAL", *position, buff);
            return STRING_INTERNAL;
        }
        
        if (c1 == '\\') {
            escape++;
        } else {
            escape = 0;
        }

        buff[buff_index++] = c1;
        c1 = c2;
    }

}